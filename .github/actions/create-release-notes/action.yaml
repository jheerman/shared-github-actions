name: 'Create Release Notes'
description: 'Custom action to create release notes'
inputs:
  release:
    description: 'Type of release'
    required: true
    default: '--latest'
    type: choice
    options:
      - '--latest'
      - '--prerelease'
  tag-prefix:
    description: 'Prefix of the tag'
    required: true
    default: 'latest'
    type: string
runs:
  using: "composite"
  steps:
    - name: Create Release Notes
      id: notes
      shell: bash
      run: |
        current_tag=$(git tag --points-at ${{ GITHUB.SHA }} | head -1)
        new_tag="${current_tag}-release"
        if git rev-parse "refs/tags/$new_tag" >/dev/null 2>&1; then
          echo "Tag $new_tag already exists. Canceling the job."
          exit 1
        fi

        # look for last release tag
        last_tag=$(git tag -l "*-release" --sort=-v:refname | head -1)
        if [ -n "$last_tag" ]; then
          last_ref=$(git show-ref -s $last_tag)
          logs=$(git log $last_ref..$GITHUB_SHA --pretty='- %h %s' --date=short)
        else
          # if the last tag is not found, check again but don't limit results to 1 item
          last_tag=$(git tag -l "*-release" --sort=-v:refname)
          if [ -n "$last_tag" ]; then
            last_ref=$(git show-ref -s $last_tag)
            logs=$(git log $last_ref..$GITHUB_SHA --pretty='- %h %s' --date=short)
          else
            # if we still can't find a tag, then get all the commit history
            logs=$(git log --pretty='- %h %s' --date=short)
          fi
        fi
        echo "## What's Changed" > ../release_notes.md
        echo "$logs" >> ../release_notes.md
        echo "---" >> ../release_notes.md
        echo "**Full Changelog**: https://github.com/${{ GITHUB.REPOSITORY }}/compare/$last_tag...$current_tag" >> ../release_notes.md
        echo "NEW_TAG=$new_tag" >> $GITHUB_OUTPUT
        echo "RELEASE_NAME=${new_tag}" >> $GITHUB_OUTPUT
        git -c user.name="github-actions[bot]" -c user.email="github-actions-bot@jheerman.com" tag $new_tag
        git push origin $new_tag
    - name: Create Release
      env:
        NEW_TAG: ${{ steps.notes.outputs.NEW_TAG }}
        RELEASE_NAME: ${{ steps.notes.outputs.RELEASE_NAME }}
      shell: bash
      run: |
        gh release create ${{ env.NEW_TAG }} \
        --title=${{ env.RELEASE_NAME }} \
        --notes-file='../release_notes.md' \
        ${{ inputs.release }}
